import asyncio
import random
from datetime import datetime

from bot.database.queries import db_get_chat, db_change_chat
from bot.pyrogram.userbot_manager import userbot_question, userbot_dialog


async def schedule_chat_activities():
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —á–∞—Ç—ã
    chats_list = await db_get_chat()
    if not chats_list:
        return

    current_time = datetime.now()
    tasks = []

    for chat in chats_list:
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã
        if not chat['status']:
            continue

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        time_diff = current_time - chat['last_activity']
        hours_diff = time_diff.total_seconds() / 3600

        # –ù–∞—Ö–æ–¥–∏–º —á–∞—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ—Ä–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        if hours_diff >= chat['activity_interval_hours']:
            # –í—ã–±–∏—Ä–∞–µ–º —Ä–µ–∂–∏–º –ø–æ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—è–º
            work_mode = random.choices(
                ['–í–æ–ø—Ä–æ—Å', '–î–∏–∞–ª–æ–≥'],
                weights=[chat['question_chance'], chat['dialog_chance']],
                k=1
            )[0]

            print(f"üí° –í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º '{work_mode}' –¥–ª—è —á–∞—Ç–∞ {chat['username']} "
                  f"(–í–æ–ø—Ä–æ—Å: {chat['question_chance']}%, –î–∏–∞–ª–æ–≥: {chat['dialog_chance']}%)")

            if work_mode == '–í–æ–ø—Ä–æ—Å':
                task = asyncio.create_task(userbot_question(chat['username']))
            else:
                task = asyncio.create_task(userbot_dialog(chat['username']))

            tasks.append(task)

            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —á–∞—Ç–∞
            await db_change_chat(chat['username'], {
                'last_activity': datetime.now(),
                'work_mode': work_mode  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º
            })

    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞—á (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    if tasks:
        await asyncio.wait(tasks, return_when=asyncio.ALL_COMPLETED)