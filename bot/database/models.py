from sqlalchemy.ext.asyncio import AsyncAttrs
from sqlalchemy.orm import Mapped, mapped_column, DeclarativeBase

class Base(AsyncAttrs, DeclarativeBase):
    pass


# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–∞—Ö
class Chat(Base):
    __tablename__ = 'chats'

    id: Mapped[int] = mapped_column(primary_key=True)
    title: Mapped[str]
    username: Mapped[str]
    status: Mapped[bool] = mapped_column(default=False)
    work_mode: Mapped[str] = mapped_column(default='–ù–µ –≤—ã–±—Ä–∞–Ω')
    activity_interval_hours: Mapped[int] = mapped_column(default=2)  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —á–∞—Å–∞—Ö
    dialog_chance: Mapped[int] = mapped_column(default=50)
    question_chance: Mapped[int] = mapped_column(default=50)

    def format_info(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏"""
        status_icon = "üü¢" if self.status else "üî¥"

        return (
            f"{self.title} (@{self.username})\n"
            f"–°—Ç–∞—Ç—É—Å: {status_icon} | –†–µ–∂–∏–º: {self.work_mode} | –ò–Ω—Ç–µ—Ä–≤–∞–ª: {self.activity_interval_hours} —á–∞—Å."
        )